<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp"><head><title>VoiceGateway Class</title><link rel="stylesheet" type="text/css" href="../styles/presentation.css" /><link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" /><script type="text/javascript" src="../scripts/EventUtilities.js"> </script><script type="text/javascript" src="../scripts/StyleUtilities.js"> </script><script type="text/javascript" src="../scripts/SplitScreen.js"> </script><script type="text/javascript" src="../scripts/ElementCollection.js"> </script><script type="text/javascript" src="../scripts/MemberFilter.js"> </script><script type="text/javascript" src="../scripts/CollapsibleSection.js"> </script><script type="text/javascript" src="../scripts/LanguageFilter.js"> </script><script type="text/javascript" src="../scripts/CookieDataStore.js"> </script><meta name="file" content="T_OpenMetaverse_Voice_VoiceGateway" /><xml xmlns:msxsl="urn:schemas-microsoft-com:xslt"><MSHelp:Attr Name="AssetID" Value="T:OpenMetaverse.Voice.VoiceGateway" /><MSHelp:Keyword Index="A" Term="T:OpenMetaverse.Voice.VoiceGateway" /><MSHelp:Keyword Index="A" Term="frlrfOpenMetaverseVoiceVoiceGatewayClassTopic" /><MSHelp:Keyword Index="A" Term="frlrfOpenMetaverseVoiceVoiceGatewayMembersTopic" /><MSHelp:Keyword Index="K" Term="VoiceGateway class" /><MSHelp:Keyword Index="K" Term="OpenMetaverse.Voice.VoiceGateway class" /><MSHelp:Keyword Index="F" Term="VoiceGateway" /><MSHelp:Keyword Index="F" Term="OpenMetaverse.Voice.VoiceGateway" /><MSHelp:Attr Name="TopicType" Value="apiref" /><MSHelp:Attr Name="TopicType" Value="kbSyntax" /><MSHelp:Attr Name="APIType" Value="Managed" /><MSHelp:Attr Name="APILocation" Value="OpenMetaverse.dll" /><MSHelp:Attr Name="APIName" Value=".VoiceGateway" /><MSHelp:Attr Name="Locale" Value="en-us" /><MSHelp:Attr Name="Abstract" Value="[Missing &lt;summary&gt; documentation for T:OpenMetaverse.Voice.VoiceGateway]" /></xml></head><body><script type="text/javascript">var store = new CookieDataStore('docs');registerEventHandler(window, 'load', function() { var ss = new SplitScreen('control', 'main'); selectLanguage(store.get('lang')); });</script><div id="control"><span class="productTitle">OpenMetaverse Library API Documentation</span><br /><span class="topicTitle">VoiceGateway Class</span><br /><div id="toolbar"><span id="chickenFeet"><a href="R_Project.htm">Namespaces</a> ► <a href="N_OpenMetaverse_Voice.htm">OpenMetaverse.Voice</a> ► <span class="selflink">VoiceGateway</span></span><span id="languageFilter"><select id="languageSelector" onchange="var names = this.value.split(' '); toggleVisibleLanguage(names[1]); lfc.switchLanguage(names[0]); store.set('lang',this.value); store.save();"><option value="CSharp cs">C#</option><option value="VisualBasic vb">Visual Basic</option><option value="ManagedCPlusPlus cpp">Visual C++</option></select></span><script>var sd = getStyleDictionary(); var lfc = new LanguageFilterController();</script></div></div><div id="main"><span style="color: DarkGray"> </span><div class="summary"><p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for T:OpenMetaverse.Voice.VoiceGateway]</p></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Declaration Syntax</div><div class="sectionContent"><table class="filter"><tr class="tabs" id="syntaxTabs"><td class="tab" x-lang="CSharp" onclick="st.toggleClass('x-lang','CSharp','activeTab','tab'); sb.toggleStyle('x-lang','CSharp','display','block','none');">C#</td><td class="tab" x-lang="VisualBasic" onclick="st.toggleClass('x-lang','VisualBasic','activeTab','tab'); sb.toggleStyle('x-lang','VisualBasic','display','block','none');">Visual Basic</td><td class="tab" x-lang="ManagedCPlusPlus" onclick="st.toggleClass('x-lang','ManagedCPlusPlus','activeTab','tab'); sb.toggleStyle('x-lang','ManagedCPlusPlus','display','block','none');">Visual C++</td></tr></table><div id="syntaxBlocks"><div class="code" x-lang="CSharp"><pre><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">VoiceGateway</span></pre></div><div class="code" x-lang="VisualBasic"><pre><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">VoiceGateway</span></pre></div><div class="code" x-lang="ManagedCPlusPlus"><pre><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">VoiceGateway</span></pre></div></div><script type="text/javascript">
						var st = new ElementCollection('syntaxTabs');
						var sb = new ElementCollection('syntaxBlocks');
						lfc.registerTabbedArea(st, sb);
						st.toggleClass('x-lang','CSharp','activeTab','tab');
						sb.toggleStyle('x-lang','CSharp','display','block','none');
					</script></div></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Members</div><div class="sectionContent"><table class="filter"><tr class="tabs" id="memberTabs"><td class="tab" value="all" onclick="mt.toggleClass('value','all','activeTab','tab'); mf.subgroup='all'; ms.process(getInstanceDelegate(mf,'filterElement'));">All Members</td><td class="tab" value="constructor" onclick="mt.toggleClass('value','constructor','activeTab','tab'); mf.subgroup='constructor'; ms.process(getInstanceDelegate(mf,'filterElement'));">Constructors</td><td class="tab" value="method" onclick="mt.toggleClass('value','method','activeTab','tab'); mf.subgroup='method'; ms.process(getInstanceDelegate(mf,'filterElement'));">Methods</td><td class="tab" value="property" onclick="mt.toggleClass('value','property','activeTab','tab'); mf.subgroup='property'; ms.process(getInstanceDelegate(mf,'filterElement'));">Properties</td><td class="tab" value="field" onclick="mt.toggleClass('value','field','activeTab','tab'); mf.subgroup='field'; ms.process(getInstanceDelegate(mf,'filterElement'));">Fields</td><td class="tab" value="event" onclick="mt.toggleClass('value','event','activeTab','tab'); mf.subgroup='event'; ms.process(getInstanceDelegate(mf,'filterElement'));">Events</td></tr><tr><td class="line" colspan="2"><label for="public"><input id="public" type="checkbox" checked="true" onclick="mf['public'] = this.checked; ms.process(getInstanceDelegate(mf,'filterElement'));" />Public</label><br /><label for="protected"><input id="protected" type="checkbox" checked="true" onclick="mf['protected'] = this.checked; ms.process(getInstanceDelegate(mf,'filterElement'));" />Protected</label></td><td class="line" colspan="2"><label for="instance"><input id="instance" type="checkbox" checked="true" onclick="mf['instance'] = this.checked; ms.process(getInstanceDelegate(mf,'filterElement'));" />Instance</label><br /><label for="static"><input id="static" type="checkbox" checked="true" onclick="mf['static'] = this.checked; ms.process(getInstanceDelegate(mf,'filterElement'));" />Static</label></td><td class="line" colspan="2"><label for="declared"><input id="declared" type="checkbox" checked="true" onclick="mf['declared'] = this.checked; ms.process(getInstanceDelegate(mf,'filterElement'));" />Declared</label><br /><label for="inherited"><input id="inherited" type="checkbox" checked="true" onclick="mf['inherited'] = this.checked; ms.process(getInstanceDelegate(mf,'filterElement'));" />Inherited</label></td></tr></table><table class="members" id="memberList"><tr><th class="iconColumn">Icon</th><th class="nameColumn">Member</th><th class="descriptionColumn">Description</th></tr><tr data="constructor; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_Voice_VoiceGateway__ctor.htm">VoiceGateway<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_Voice_VoiceGateway_AccountLogin.htm">AccountLogin(String, String, String, String, String, Int32, Boolean)</a></td><td><div class="summary">
            This is used to login a specific user account(s). It may only be called after
            Connector initialization has completed successfully
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_Voice_VoiceGateway_AccountLogout.htm">AccountLogout(String)</a></td><td><div class="summary">
            This is used to logout a user session. It should only be called with a valid AccountHandle.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_Voice_VoiceGateway_AuxCaptureAudioStart.htm">AuxCaptureAudioStart(Int32)</a></td><td><div class="summary">
            This command is used to start the audio capture process which will cause
            AuxAudioProperty Events to be raised. These events can be used to display a
            microphone VU meter for the currently selected capture device. This command
            should not be issued if the user is on a call.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_Voice_VoiceGateway_AuxCaptureAudioStop.htm">AuxCaptureAudioStop<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            This command is used to stop the audio capture process.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_Voice_VoiceGateway_AuxGetCaptureDevices.htm">AuxGetCaptureDevices<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            This is used to get a list of audio devices that can be used for capture (input) of voice.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_Voice_VoiceGateway_AuxGetRenderDevices.htm">AuxGetRenderDevices<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            This is used to get a list of audio devices that can be used for render (playback) of voice.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_Voice_VoiceGateway_AuxSetCaptureDevice.htm">AuxSetCaptureDevice(String)</a></td><td><div class="summary">
            This command is used to select the capture device.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_Voice_VoiceGateway_AuxSetMicLevel.htm">AuxSetMicLevel(Int32)</a></td><td><div class="summary">
            This command is used to set the mic volume while in the audio tuning process.
            Once an acceptable mic level is attained, the application must issue a
            connector set mic volume command to have that level be used while on voice
            calls.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_Voice_VoiceGateway_AuxSetRenderDevice.htm">AuxSetRenderDevice(String)</a></td><td><div class="summary">
            This command is used to select the render device.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_Voice_VoiceGateway_AuxSetSpeakerLevel.htm">AuxSetSpeakerLevel(Int32)</a></td><td><div class="summary">
            This command is used to set the speaker volume while in the audio tuning
            process. Once an acceptable speaker level is attained, the application must
            issue a connector set speaker volume command to have that level be used while
            on voice calls.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_Voice_VoiceGateway_ConnectorCreate.htm">ConnectorCreate(String, String, UInt16, UInt16, VoiceGateway<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>VoiceLoggingSettings)</a></td><td><div class="summary">
            This is used to initialize and stop the Connector as a whole. The Connector
            Create call must be completed successfully before any other requests are made
            (typically during application initialization). The shutdown should be called
            when the application is shutting down to gracefully release resources
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_Voice_VoiceGateway_ConnectorInitiateShutdown.htm">ConnectorInitiateShutdown(String)</a></td><td><div class="summary">
            Shutdown Connector -- Should be called when the application is shutting down
            to gracefully release resources
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_Voice_VoiceGateway_ConnectorMuteLocalMic.htm">ConnectorMuteLocalMic(String, Boolean)</a></td><td><div class="summary">
            Mute or unmute the microphone
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_Voice_VoiceGateway_ConnectorMuteLocalSpeaker.htm">ConnectorMuteLocalSpeaker(String, Boolean)</a></td><td><div class="summary">
            Mute or unmute the speaker
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_Voice_VoiceGateway_ConnectorSetLocalMicVolume.htm">ConnectorSetLocalMicVolume(String, Int32)</a></td><td><div class="summary">
            Set microphone volume
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_Voice_VoiceGateway_ConnectorSetLocalSpeakerVolume.htm">ConnectorSetLocalSpeakerVolume(String, Int32)</a></td><td><div class="summary">
            Set local speaker volume
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_Voice_VoiceGateway_ConnectToDaemon.htm">ConnectToDaemon(String, Int32)</a></td><td><div class="summary">
      </div><br /></td></tr><tr data="field; protected; instance; declared"><td><img src="../icons/protfield.gif" /></td><td><a href="F_OpenMetaverse_Voice_VoiceGateway_daemonIsConnected.htm">daemonIsConnected</a></td><td><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="P_OpenMetaverse_Voice_VoiceGateway_DaemonIsConnected.htm">DaemonIsConnected</a></td><td><br /></td></tr><tr data="field; protected; instance; declared"><td><img src="../icons/protfield.gif" /></td><td><a href="F_OpenMetaverse_Voice_VoiceGateway_daemonIsRunning.htm">daemonIsRunning</a></td><td><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="P_OpenMetaverse_Voice_VoiceGateway_DaemonIsRunning.htm">DaemonIsRunning</a></td><td><br /></td></tr><tr data="field; protected; instance; declared"><td><img src="../icons/protfield.gif" /></td><td><a href="F_OpenMetaverse_Voice_VoiceGateway_daemonLoopSignal.htm">daemonLoopSignal</a></td><td><br /></td></tr><tr data="field; protected; instance; declared"><td><img src="../icons/protfield.gif" /></td><td><a href="F_OpenMetaverse_Voice_VoiceGateway_daemonPipe.htm">daemonPipe</a></td><td><br /></td></tr><tr data="field; protected; instance; declared"><td><img src="../icons/protfield.gif" /></td><td><a href="F_OpenMetaverse_Voice_VoiceGateway_daemonProcess.htm">daemonProcess</a></td><td><br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="http://msdn2.microsoft.com/en-us/bsc2ak47" target="_blank">Equals(Object)</a></td><td><div class="summary">Determines whether the specified <a href="http://msdn2.microsoft.com/en-us/e5kfa45b" target="_blank">Object</a> is equal to the current <a href="http://msdn2.microsoft.com/en-us/e5kfa45b" target="_blank">Object</a>.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/e5kfa45b" target="_blank">Object</a>.)<br /></td></tr><tr data="method; protected; instance; inherited"><td><img src="../icons/protmethod.gif" /></td><td><a href="http://msdn2.microsoft.com/en-us/4k87zsw7" target="_blank">Finalize<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">Allows an <a href="http://msdn2.microsoft.com/en-us/e5kfa45b" target="_blank">Object</a> to attempt to free resources and perform other cleanup operations before the <a href="http://msdn2.microsoft.com/en-us/e5kfa45b" target="_blank">Object</a> is reclaimed by garbage collection.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/e5kfa45b" target="_blank">Object</a>.)<br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="http://msdn2.microsoft.com/en-us/zdee4b3y" target="_blank">GetHashCode<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">Serves as a hash function for a particular type. </div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/e5kfa45b" target="_blank">Object</a>.)<br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="http://msdn2.microsoft.com/en-us/dfwy45w9" target="_blank">GetType<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">Gets the <a href="http://msdn2.microsoft.com/en-us/42892f65" target="_blank">Type</a> of the current instance.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/e5kfa45b" target="_blank">Object</a>.)<br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/pubmethod.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_OpenMetaverse_Voice_VoiceGateway_MakeXML.htm">MakeXML(String, String)</a></td><td><br /></td></tr><tr data="method; protected; instance; inherited"><td><img src="../icons/protmethod.gif" /></td><td><a href="http://msdn2.microsoft.com/en-us/57ctke0a" target="_blank">MemberwiseClone<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">Creates a shallow copy of the current <a href="http://msdn2.microsoft.com/en-us/e5kfa45b" target="_blank">Object</a>.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/e5kfa45b" target="_blank">Object</a>.)<br /></td></tr><tr data="event; public; instance; declared"><td><img src="../icons/pubevent.gif" /></td><td><a href="E_OpenMetaverse_Voice_VoiceGateway_OnAccountLoginResponse.htm">OnAccountLoginResponse</a></td><td><div class="summary">Response to Account.Login request</div><br /></td></tr><tr data="event; public; instance; declared"><td><img src="../icons/pubevent.gif" /></td><td><a href="E_OpenMetaverse_Voice_VoiceGateway_OnAccountLoginStateChangeEvent.htm">OnAccountLoginStateChangeEvent</a></td><td><div class="summary">This event message is sent whenever the login state of the
            particular Account has transitioned from one value to another</div><br /></td></tr><tr data="event; public; instance; declared"><td><img src="../icons/pubevent.gif" /></td><td><a href="E_OpenMetaverse_Voice_VoiceGateway_OnAccountLogoutResponse.htm">OnAccountLogoutResponse</a></td><td><div class="summary">Response to Account.Logout request</div><br /></td></tr><tr data="event; public; instance; declared"><td><img src="../icons/pubevent.gif" /></td><td><a href="E_OpenMetaverse_Voice_VoiceGateway_OnAuxAudioPropertiesEvent.htm">OnAuxAudioPropertiesEvent</a></td><td><div class="summary">Audio Properties Events are sent after audio capture is started.
            These events are used to display a microphone VU meter</div><br /></td></tr><tr data="event; public; instance; declared"><td><img src="../icons/pubevent.gif" /></td><td><a href="E_OpenMetaverse_Voice_VoiceGateway_OnAuxCaptureAudioStartResponse.htm">OnAuxCaptureAudioStartResponse</a></td><td><div class="summary">Response to Aux.CaptureAudioStart request</div><br /></td></tr><tr data="event; public; instance; declared"><td><img src="../icons/pubevent.gif" /></td><td><a href="E_OpenMetaverse_Voice_VoiceGateway_OnAuxCaptureAudioStopResponse.htm">OnAuxCaptureAudioStopResponse</a></td><td><div class="summary">Response to Aux.CaptureAudioStop request</div><br /></td></tr><tr data="event; public; instance; declared"><td><img src="../icons/pubevent.gif" /></td><td><a href="E_OpenMetaverse_Voice_VoiceGateway_OnAuxGetCaptureDevicesResponse.htm">OnAuxGetCaptureDevicesResponse</a></td><td><div class="summary">Response to Aux.GetCaptureDevices request</div><br /></td></tr><tr data="event; public; instance; declared"><td><img src="../icons/pubevent.gif" /></td><td><a href="E_OpenMetaverse_Voice_VoiceGateway_OnAuxGetRenderDevicesResponse.htm">OnAuxGetRenderDevicesResponse</a></td><td><div class="summary">Response to Aux.GetRenderDevices request</div><br /></td></tr><tr data="event; public; instance; declared"><td><img src="../icons/pubevent.gif" /></td><td><a href="E_OpenMetaverse_Voice_VoiceGateway_OnAuxSetCaptureDeviceResponse.htm">OnAuxSetCaptureDeviceResponse</a></td><td><div class="summary">Response to Aux.SetCaptureDevice request</div><br /></td></tr><tr data="event; public; instance; declared"><td><img src="../icons/pubevent.gif" /></td><td><a href="E_OpenMetaverse_Voice_VoiceGateway_OnAuxSetMicLevelResponse.htm">OnAuxSetMicLevelResponse</a></td><td><div class="summary">Response to Aux.SetMicLevel request</div><br /></td></tr><tr data="event; public; instance; declared"><td><img src="../icons/pubevent.gif" /></td><td><a href="E_OpenMetaverse_Voice_VoiceGateway_OnAuxSetRenderDeviceResponse.htm">OnAuxSetRenderDeviceResponse</a></td><td><div class="summary">Response to Aux.SetRenderDevice request</div><br /></td></tr><tr data="event; public; instance; declared"><td><img src="../icons/pubevent.gif" /></td><td><a href="E_OpenMetaverse_Voice_VoiceGateway_OnAuxSetSpeakerLevelResponse.htm">OnAuxSetSpeakerLevelResponse</a></td><td><div class="summary">Response to Aux.SetSpeakerLevel request</div><br /></td></tr><tr data="event; public; instance; declared"><td><img src="../icons/pubevent.gif" /></td><td><a href="E_OpenMetaverse_Voice_VoiceGateway_OnConnectorCreateResponse.htm">OnConnectorCreateResponse</a></td><td><div class="summary">Response to Connector.Create request</div><br /></td></tr><tr data="event; public; instance; declared"><td><img src="../icons/pubevent.gif" /></td><td><a href="E_OpenMetaverse_Voice_VoiceGateway_OnConnectorInitiateShutdownResponse.htm">OnConnectorInitiateShutdownResponse</a></td><td><div class="summary">Response to Connector.InitiateShutdown request</div><br /></td></tr><tr data="event; public; instance; declared"><td><img src="../icons/pubevent.gif" /></td><td><a href="E_OpenMetaverse_Voice_VoiceGateway_OnConnectorMuteLocalMicResponse.htm">OnConnectorMuteLocalMicResponse</a></td><td><div class="summary">Response to Connector.MuteLocalMic request</div><br /></td></tr><tr data="event; public; instance; declared"><td><img src="../icons/pubevent.gif" /></td><td><a href="E_OpenMetaverse_Voice_VoiceGateway_OnConnectorMuteLocalSpeakerResponse.htm">OnConnectorMuteLocalSpeakerResponse</a></td><td><div class="summary">Response to Connector.MuteLocalSpeaker request</div><br /></td></tr><tr data="event; public; instance; declared"><td><img src="../icons/pubevent.gif" /></td><td><a href="E_OpenMetaverse_Voice_VoiceGateway_OnConnectorSetLocalMicVolumeResponse.htm">OnConnectorSetLocalMicVolumeResponse</a></td><td><div class="summary">Response to Connector.SetLocalMicVolume request</div><br /></td></tr><tr data="event; public; instance; declared"><td><img src="../icons/pubevent.gif" /></td><td><a href="E_OpenMetaverse_Voice_VoiceGateway_OnConnectorSetLocalSpeakerVolumeResponse.htm">OnConnectorSetLocalSpeakerVolumeResponse</a></td><td><div class="summary">Response to Connector.SetLocalSpeakerVolume request</div><br /></td></tr><tr data="event; public; instance; declared"><td><img src="../icons/pubevent.gif" /></td><td><a href="E_OpenMetaverse_Voice_VoiceGateway_OnDaemonConnected.htm">OnDaemonConnected</a></td><td><br /></td></tr><tr data="event; public; instance; declared"><td><img src="../icons/pubevent.gif" /></td><td><a href="E_OpenMetaverse_Voice_VoiceGateway_OnDaemonCouldntConnect.htm">OnDaemonCouldntConnect</a></td><td><br /></td></tr><tr data="event; public; instance; declared"><td><img src="../icons/pubevent.gif" /></td><td><a href="E_OpenMetaverse_Voice_VoiceGateway_OnDaemonCouldntRun.htm">OnDaemonCouldntRun</a></td><td><br /></td></tr><tr data="event; public; instance; declared"><td><img src="../icons/pubevent.gif" /></td><td><a href="E_OpenMetaverse_Voice_VoiceGateway_OnDaemonDisconnected.htm">OnDaemonDisconnected</a></td><td><br /></td></tr><tr data="event; public; instance; declared"><td><img src="../icons/pubevent.gif" /></td><td><a href="E_OpenMetaverse_Voice_VoiceGateway_OnDaemonExited.htm">OnDaemonExited</a></td><td><br /></td></tr><tr data="event; public; instance; declared"><td><img src="../icons/pubevent.gif" /></td><td><a href="E_OpenMetaverse_Voice_VoiceGateway_OnDaemonRunning.htm">OnDaemonRunning</a></td><td><br /></td></tr><tr data="event; public; instance; declared"><td><img src="../icons/pubevent.gif" /></td><td><a href="E_OpenMetaverse_Voice_VoiceGateway_OnSessionConnectResponse.htm">OnSessionConnectResponse</a></td><td><div class="summary">Response to Session.Connect request</div><br /></td></tr><tr data="event; public; instance; declared"><td><img src="../icons/pubevent.gif" /></td><td><a href="E_OpenMetaverse_Voice_VoiceGateway_OnSessionCreateResponse.htm">OnSessionCreateResponse</a></td><td><div class="summary">Response to Session.Create request</div><br /></td></tr><tr data="event; public; instance; declared"><td><img src="../icons/pubevent.gif" /></td><td><a href="E_OpenMetaverse_Voice_VoiceGateway_OnSessionMediaEvent.htm">OnSessionMediaEvent</a></td><td><div class="summary">
      </div><br /></td></tr><tr data="event; public; instance; declared"><td><img src="../icons/pubevent.gif" /></td><td><a href="E_OpenMetaverse_Voice_VoiceGateway_OnSessionNewEvent.htm">OnSessionNewEvent</a></td><td><div class="summary">Sent when an incoming session occurs</div><br /></td></tr><tr data="event; public; instance; declared"><td><img src="../icons/pubevent.gif" /></td><td><a href="E_OpenMetaverse_Voice_VoiceGateway_OnSessionParticipantPropertiesEvent.htm">OnSessionParticipantPropertiesEvent</a></td><td><div class="summary">Sent for specific Participant Property changes (IsSpeaking, Volume, Energy, etc.)</div><br /></td></tr><tr data="event; public; instance; declared"><td><img src="../icons/pubevent.gif" /></td><td><a href="E_OpenMetaverse_Voice_VoiceGateway_OnSessionParticipantStateChangeEvent.htm">OnSessionParticipantStateChangeEvent</a></td><td><div class="summary">Sent for specific Participant state changes (new participants, dropped participants)</div><br /></td></tr><tr data="event; public; instance; declared"><td><img src="../icons/pubevent.gif" /></td><td><a href="E_OpenMetaverse_Voice_VoiceGateway_OnSessionRenderAudioStartResponse.htm">OnSessionRenderAudioStartResponse</a></td><td><div class="summary">Response to Session.RenderAudioStart request</div><br /></td></tr><tr data="event; public; instance; declared"><td><img src="../icons/pubevent.gif" /></td><td><a href="E_OpenMetaverse_Voice_VoiceGateway_OnSessionRenderAudioStopResponse.htm">OnSessionRenderAudioStopResponse</a></td><td><div class="summary">Response to Session.RenderAudioStop request</div><br /></td></tr><tr data="event; public; instance; declared"><td><img src="../icons/pubevent.gif" /></td><td><a href="E_OpenMetaverse_Voice_VoiceGateway_OnSessionSetParticipantVolumeForMeResponse.htm">OnSessionSetParticipantVolumeForMeResponse</a></td><td><div class="summary">Response to Session.SetParticipantVolumeForMe request</div><br /></td></tr><tr data="event; public; instance; declared"><td><img src="../icons/pubevent.gif" /></td><td><a href="E_OpenMetaverse_Voice_VoiceGateway_OnSessionStateChangeEvent.htm">OnSessionStateChangeEvent</a></td><td><div class="summary">Sent for specific Session state changes (connected, disconnected)</div><br /></td></tr><tr data="event; public; instance; declared"><td><img src="../icons/pubevent.gif" /></td><td><a href="E_OpenMetaverse_Voice_VoiceGateway_OnSessionTerminateResponse.htm">OnSessionTerminateResponse</a></td><td><div class="summary">Response to Session.Terminate request</div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_Voice_VoiceGateway_Request.htm">Request(String)</a></td><td><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_Voice_VoiceGateway_Request_1.htm">Request(String, String)</a></td><td><br /></td></tr><tr data="field; protected; instance; declared"><td><img src="../icons/protfield.gif" /></td><td><a href="F_OpenMetaverse_Voice_VoiceGateway_requestId.htm">requestId</a></td><td><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="P_OpenMetaverse_Voice_VoiceGateway_RequestId.htm">RequestId</a></td><td><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_Voice_VoiceGateway_SessionConnect.htm">SessionConnect(String, String)</a></td><td><div class="summary">
            Used to accept a call
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_Voice_VoiceGateway_SessionCreate.htm">SessionCreate(String, String, String, String, Boolean, Boolean, String)</a></td><td><div class="summary">
            Create a Session
            Sessions typically represent a connection to a media session with one or more
            participants. This is used to generate an ‘outbound’ call to another user or
            channel. The specifics depend on the media types involved. A session handle is
            required to control the local user functions within the session (or remote
            users if the current account has rights to do so). Currently creating a
            session automatically connects to the audio media, there is no need to call
            Session.Connect at this time, this is reserved for future use.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_Voice_VoiceGateway_SessionRenderAudioStart.htm">SessionRenderAudioStart(String, Boolean)</a></td><td><div class="summary">
            This command is used to start the audio render process, which will then play
            the passed in file through the selected audio render device. This command
            should not be issued if the user is on a call.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_Voice_VoiceGateway_SessionRenderAudioStop.htm">SessionRenderAudioStop(String)</a></td><td><div class="summary">
            This command is used to stop the audio render process.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_Voice_VoiceGateway_SessionSet3DPosition.htm">SessionSet3DPosition(String, VoiceGateway<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>VoicePosition, VoiceGateway<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>VoicePosition)</a></td><td><div class="summary">
            Set the combined speaking and listening position in 3D space.
            There appears to be no response to this request.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_Voice_VoiceGateway_SessionSetParticipantVolumeForMe.htm">SessionSetParticipantVolumeForMe(String, String, Int32)</a></td><td><div class="summary">
            Set User Volume for a particular user. Does not affect how other users hear that user.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_Voice_VoiceGateway_SessionTerminate.htm">SessionTerminate(String)</a></td><td><div class="summary">
            This is used to ‘end’ an established session (i.e. hang-up or disconnect).
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_Voice_VoiceGateway_StartDaemon.htm">StartDaemon(String, String)</a></td><td><div class="summary">
            Starts a thread that keeps the daemon running
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_Voice_VoiceGateway_StopDaemon.htm">StopDaemon<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Stops the daemon and the thread keeping it running
            </div><br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="http://msdn2.microsoft.com/en-us/7bxwbwt2" target="_blank">ToString<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">Returns a <a href="http://msdn2.microsoft.com/en-us/s1wwdcbf" target="_blank">String</a> that represents the current <a href="http://msdn2.microsoft.com/en-us/e5kfa45b" target="_blank">Object</a>.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/e5kfa45b" target="_blank">Object</a>.)<br /></td></tr></table><script type="text/javascript">
					var mt = new ElementCollection('memberTabs');
					var ms = new ElementCollection('memberList');
					var mf = new MemberFilter();
					mt.toggleClass('value','all','activeTab','tab');
				</script></div></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Inheritance Hierarchy</div><div class="sectionContent"><table cellspacing="0" cellpadding="0"><tr><td colspan="2"><a href="http://msdn2.microsoft.com/en-us/e5kfa45b" target="_blank">Object</a></td></tr><tr><td><img src="../icons/LastChild.gif" /></td><td><span class="selflink">VoiceGateway</span></td></tr></table></div></div><p><div id="footer"><p />Send comments on this topic to
        <a id="HT_MailLink" href="mailto:contact%40libsecondlife.org?Subject=OpenMetaverse Library API Documentation">The OpenMetaverse Ninjas</a>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title;
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> <p /><a href="http://www.libsecondlife.org/wiki/libsecondlife:License">License</a></div>Assembly: <span data="assembly">OpenMetaverse</span> (Module: OpenMetaverse) Version: 1.0.0.0</p></div></body></html>