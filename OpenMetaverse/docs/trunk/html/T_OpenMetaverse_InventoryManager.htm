<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp"><head><title>InventoryManager Class</title><link rel="stylesheet" type="text/css" href="../styles/presentation.css" /><link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" /><script type="text/javascript" src="../scripts/EventUtilities.js"> </script><script type="text/javascript" src="../scripts/StyleUtilities.js"> </script><script type="text/javascript" src="../scripts/SplitScreen.js"> </script><script type="text/javascript" src="../scripts/ElementCollection.js"> </script><script type="text/javascript" src="../scripts/MemberFilter.js"> </script><script type="text/javascript" src="../scripts/CollapsibleSection.js"> </script><script type="text/javascript" src="../scripts/LanguageFilter.js"> </script><script type="text/javascript" src="../scripts/CookieDataStore.js"> </script><meta name="file" content="T_OpenMetaverse_InventoryManager" /><xml xmlns:msxsl="urn:schemas-microsoft-com:xslt"><MSHelp:Attr Name="AssetID" Value="T:OpenMetaverse.InventoryManager" /><MSHelp:Keyword Index="A" Term="T:OpenMetaverse.InventoryManager" /><MSHelp:Keyword Index="A" Term="frlrfOpenMetaverseInventoryManagerClassTopic" /><MSHelp:Keyword Index="A" Term="frlrfOpenMetaverseInventoryManagerMembersTopic" /><MSHelp:Keyword Index="K" Term="InventoryManager class" /><MSHelp:Keyword Index="K" Term="OpenMetaverse.InventoryManager class" /><MSHelp:Keyword Index="F" Term="InventoryManager" /><MSHelp:Keyword Index="F" Term="OpenMetaverse.InventoryManager" /><MSHelp:Attr Name="TopicType" Value="apiref" /><MSHelp:Attr Name="TopicType" Value="kbSyntax" /><MSHelp:Attr Name="APIType" Value="Managed" /><MSHelp:Attr Name="APILocation" Value="OpenMetaverse.dll" /><MSHelp:Attr Name="APIName" Value=".InventoryManager" /><MSHelp:Attr Name="Locale" Value="en-us" /><MSHelp:Attr Name="Abstract" Value="Tools for dealing with agents inventory" /></xml></head><body><script type="text/javascript">var store = new CookieDataStore('docs');registerEventHandler(window, 'load', function() { var ss = new SplitScreen('control', 'main'); selectLanguage(store.get('lang')); });</script><div id="control"><span class="productTitle">OpenMetaverse Library API Documentation</span><br /><span class="topicTitle">InventoryManager Class</span><br /><div id="toolbar"><span id="chickenFeet"><a href="R_Project.htm">Namespaces</a> ► <a href="N_OpenMetaverse.htm">OpenMetaverse</a> ► <span class="selflink">InventoryManager</span></span><span id="languageFilter"><select id="languageSelector" onchange="var names = this.value.split(' '); toggleVisibleLanguage(names[1]); lfc.switchLanguage(names[0]); store.set('lang',this.value); store.save();"><option value="CSharp cs">C#</option><option value="VisualBasic vb">Visual Basic</option><option value="ManagedCPlusPlus cpp">Visual C++</option></select></span><script>var sd = getStyleDictionary(); var lfc = new LanguageFilterController();</script></div></div><div id="main"><span style="color: DarkGray"> </span><div class="summary">
            Tools for dealing with agents inventory
            </div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Declaration Syntax</div><div class="sectionContent"><table class="filter"><tr class="tabs" id="syntaxTabs"><td class="tab" x-lang="CSharp" onclick="st.toggleClass('x-lang','CSharp','activeTab','tab'); sb.toggleStyle('x-lang','CSharp','display','block','none');">C#</td><td class="tab" x-lang="VisualBasic" onclick="st.toggleClass('x-lang','VisualBasic','activeTab','tab'); sb.toggleStyle('x-lang','VisualBasic','display','block','none');">Visual Basic</td><td class="tab" x-lang="ManagedCPlusPlus" onclick="st.toggleClass('x-lang','ManagedCPlusPlus','activeTab','tab'); sb.toggleStyle('x-lang','ManagedCPlusPlus','display','block','none');">Visual C++</td></tr></table><div id="syntaxBlocks"><div class="code" x-lang="CSharp"><pre><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">InventoryManager</span></pre></div><div class="code" x-lang="VisualBasic"><pre><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">InventoryManager</span></pre></div><div class="code" x-lang="ManagedCPlusPlus"><pre><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">InventoryManager</span></pre></div></div><script type="text/javascript">
						var st = new ElementCollection('syntaxTabs');
						var sb = new ElementCollection('syntaxBlocks');
						lfc.registerTabbedArea(st, sb);
						st.toggleClass('x-lang','CSharp','activeTab','tab');
						sb.toggleStyle('x-lang','CSharp','display','block','none');
					</script></div></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Members</div><div class="sectionContent"><table class="filter"><tr class="tabs" id="memberTabs"><td class="tab" value="all" onclick="mt.toggleClass('value','all','activeTab','tab'); mf.subgroup='all'; ms.process(getInstanceDelegate(mf,'filterElement'));">All Members</td><td class="tab" value="constructor" onclick="mt.toggleClass('value','constructor','activeTab','tab'); mf.subgroup='constructor'; ms.process(getInstanceDelegate(mf,'filterElement'));">Constructors</td><td class="tab" value="method" onclick="mt.toggleClass('value','method','activeTab','tab'); mf.subgroup='method'; ms.process(getInstanceDelegate(mf,'filterElement'));">Methods</td><td class="tab" value="property" onclick="mt.toggleClass('value','property','activeTab','tab'); mf.subgroup='property'; ms.process(getInstanceDelegate(mf,'filterElement'));">Properties</td><td class="tab" value="event" onclick="mt.toggleClass('value','event','activeTab','tab'); mf.subgroup='event'; ms.process(getInstanceDelegate(mf,'filterElement'));">Events</td></tr><tr><td class="line" colspan="2"><label for="public"><input id="public" type="checkbox" checked="true" onclick="mf['public'] = this.checked; ms.process(getInstanceDelegate(mf,'filterElement'));" />Public</label><br /><label for="protected"><input id="protected" type="checkbox" checked="true" onclick="mf['protected'] = this.checked; ms.process(getInstanceDelegate(mf,'filterElement'));" />Protected</label></td><td class="line" colspan="2"><label for="instance"><input id="instance" type="checkbox" checked="true" onclick="mf['instance'] = this.checked; ms.process(getInstanceDelegate(mf,'filterElement'));" />Instance</label><br /><label for="static"><input id="static" type="checkbox" checked="true" onclick="mf['static'] = this.checked; ms.process(getInstanceDelegate(mf,'filterElement'));" />Static</label></td><td class="line" colspan="2"><label for="declared"><input id="declared" type="checkbox" checked="true" onclick="mf['declared'] = this.checked; ms.process(getInstanceDelegate(mf,'filterElement'));" />Declared</label><br /><label for="inherited"><input id="inherited" type="checkbox" checked="true" onclick="mf['inherited'] = this.checked; ms.process(getInstanceDelegate(mf,'filterElement'));" />Inherited</label></td></tr></table><table class="members" id="memberList"><tr><th class="iconColumn">Icon</th><th class="nameColumn">Member</th><th class="descriptionColumn">Description</th></tr><tr data="constructor; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_InventoryManager__ctor.htm">InventoryManager(GridClient)</a></td><td><div class="summary">
            Default constructor
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/pubmethod.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_OpenMetaverse_InventoryManager_AssetTypeToString.htm">AssetTypeToString(AssetType)</a></td><td><div class="summary">
            Takes an AssetType and returns the string representation
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_InventoryManager_CreateFolder.htm">CreateFolder(LLUUID, String)</a></td><td><div class="summary">
            Creates a new inventory folder
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_InventoryManager_CreateFolder_1.htm">CreateFolder(LLUUID, String, AssetType)</a></td><td><div class="summary">
            Creates a new inventory folder
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/pubmethod.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_OpenMetaverse_InventoryManager_CreateInventoryItem.htm">CreateInventoryItem(InventoryType, LLUUID)</a></td><td><div class="summary">
            Wrapper for creating a new <a href="T_OpenMetaverse_InventoryItem.htm">InventoryItem</a> object
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_InventoryManager_EmptyLostAndFound.htm">EmptyLostAndFound<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Empty the Lost and Found folder
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_InventoryManager_EmptyTrash.htm">EmptyTrash<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">
            Empty the Trash folder
            </div><br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="http://msdn2.microsoft.com/en-us/bsc2ak47" target="_blank">Equals(Object)</a></td><td><div class="summary">Determines whether the specified <a href="http://msdn2.microsoft.com/en-us/e5kfa45b" target="_blank">Object</a> is equal to the current <a href="http://msdn2.microsoft.com/en-us/e5kfa45b" target="_blank">Object</a>.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/e5kfa45b" target="_blank">Object</a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_InventoryManager_FetchItem.htm">FetchItem(LLUUID, LLUUID, Int32)</a></td><td><div class="summary">
            Fetch an inventory item from the dataserver
            </div><br /></td></tr><tr data="method; protected; instance; inherited"><td><img src="../icons/protmethod.gif" /></td><td><a href="http://msdn2.microsoft.com/en-us/4k87zsw7" target="_blank">Finalize<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">Allows an <a href="http://msdn2.microsoft.com/en-us/e5kfa45b" target="_blank">Object</a> to attempt to free resources and perform other cleanup operations before the <a href="http://msdn2.microsoft.com/en-us/e5kfa45b" target="_blank">Object</a> is reclaimed by garbage collection.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/e5kfa45b" target="_blank">Object</a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_InventoryManager_FindFolderForType.htm">FindFolderForType(AssetType)</a></td><td><div class="summary">
            Returns the UUID of the folder (category) that defaults to
            containing 'type'. The folder is not necessarily only for that
            type
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_InventoryManager_FindObjectByPath.htm">FindObjectByPath(LLUUID, LLUUID, String, Int32)</a></td><td><div class="summary">
            Find an object in inventory using a specific path to search
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_InventoryManager_FolderContents.htm">FolderContents(LLUUID, LLUUID, Boolean, Boolean, InventorySortOrder, Int32)</a></td><td><div class="summary">
            Get contents of a folder
            </div><br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="http://msdn2.microsoft.com/en-us/zdee4b3y" target="_blank">GetHashCode<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">Serves as a hash function for a particular type. </div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/e5kfa45b" target="_blank">Object</a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_InventoryManager_GetTaskInventory.htm">GetTaskInventory(LLUUID, UInt32, Int32)</a></td><td><div class="summary">
            Get the inventory of a Task (Primitive)
            </div><br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="http://msdn2.microsoft.com/en-us/dfwy45w9" target="_blank">GetType<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">Gets the <a href="http://msdn2.microsoft.com/en-us/42892f65" target="_blank">Type</a> of the current instance.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/e5kfa45b" target="_blank">Object</a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_InventoryManager_GiveFolder.htm">GiveFolder(LLUUID, String, AssetType, LLUUID, Boolean)</a></td><td><div class="summary">
            Give an inventory Folder with contents to another avatar
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_InventoryManager_GiveItem.htm">GiveItem(LLUUID, String, AssetType, LLUUID, Boolean)</a></td><td><div class="summary">
            Give an inventory item to another avatar
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/pubmethod.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_OpenMetaverse_InventoryManager_InventoryTypeToString.htm">InventoryTypeToString(InventoryType)</a></td><td><div class="summary">
            Convert an InventoryType to a string
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/pubmethod.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_OpenMetaverse_InventoryManager_ItemCRC.htm">ItemCRC(InventoryItem)</a></td><td><div class="summary">
            Create a CRC from an InventoryItem
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_InventoryManager_LocalFind.htm">LocalFind(LLUUID, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>String<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span></span>, Int32, Boolean)</a></td><td><div class="summary">
            Search inventory Store object for an item or folder
            </div><br /></td></tr><tr data="method; protected; instance; inherited"><td><img src="../icons/protmethod.gif" /></td><td><a href="http://msdn2.microsoft.com/en-us/57ctke0a" target="_blank">MemberwiseClone<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">Creates a shallow copy of the current <a href="http://msdn2.microsoft.com/en-us/e5kfa45b" target="_blank">Object</a>.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/e5kfa45b" target="_blank">Object</a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_InventoryManager_Move.htm">Move(InventoryBase, InventoryFolder)</a></td><td><div class="summary">
            Move an inventory item or folder to a new location
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_InventoryManager_Move_1.htm">Move(InventoryBase, InventoryFolder, String)</a></td><td><div class="summary">
            Move an inventory item or folder to a new location and change its name
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_InventoryManager_MoveFolder_1.htm">MoveFolder(LLUUID, LLUUID, String)</a></td><td><div class="summary">
            Move and rename a folder
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_InventoryManager_MoveFolder.htm">MoveFolder(LLUUID, LLUUID)</a></td><td><div class="summary">
            Move a folder
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_InventoryManager_MoveFolders.htm">MoveFolders(Dictionary<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>LLUUID, LLUUID<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary">
            Move multiple folders, the keys in the Dictionary parameter,
            to a new parents, the value of that folder's key.
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_InventoryManager_MoveItem.htm">MoveItem(LLUUID, LLUUID)</a></td><td><div class="summary">
            Move an inventory item to a new folder
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_InventoryManager_MoveItem_1.htm">MoveItem(LLUUID, LLUUID, String)</a></td><td><div class="summary">
            Move and rename an inventory item
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_InventoryManager_MoveItems.htm">MoveItems(Dictionary<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>LLUUID, LLUUID<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary">
            Move multiple inventory items to new locations
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_InventoryManager_MoveTaskInventory.htm">MoveTaskInventory(UInt32, LLUUID, LLUUID, Simulator)</a></td><td><div class="summary">
            Moves an Item from an objects (Prim) Inventory to the specified folder in the avatars inventory
            </div><br /></td></tr><tr data="event; public; instance; declared"><td><img src="../icons/pubevent.gif" /></td><td><a href="E_OpenMetaverse_InventoryManager_OnFindObjectByPath.htm">OnFindObjectByPath</a></td><td><div class="summary">
            Fired when a response to FindObjectByPath() is received
            </div><br /></td></tr><tr data="event; public; instance; declared"><td><img src="../icons/pubevent.gif" /></td><td><a href="E_OpenMetaverse_InventoryManager_OnFolderUpdated.htm">OnFolderUpdated</a></td><td><div class="summary">
            Fired when a response to a RequestFolderContents() is received 
            </div><br /></td></tr><tr data="event; public; instance; declared"><td><img src="../icons/pubevent.gif" /></td><td><a href="E_OpenMetaverse_InventoryManager_OnItemReceived.htm">OnItemReceived</a></td><td><div class="summary">
            Fired when a reply to a RequestFetchInventory() is received
            </div><br /></td></tr><tr data="event; public; instance; declared"><td><img src="../icons/pubevent.gif" /></td><td><a href="E_OpenMetaverse_InventoryManager_OnObjectOffered.htm">OnObjectOffered</a></td><td><div class="summary">
            Fired when an object or another avatar offers us an inventory item
            </div><br /></td></tr><tr data="event; public; instance; declared"><td><img src="../icons/pubevent.gif" /></td><td><a href="E_OpenMetaverse_InventoryManager_OnTaskInventoryReply.htm">OnTaskInventoryReply</a></td><td><div class="summary">
            Fired in response to a request for a tasks (primitive) inventory
            </div><br /></td></tr><tr data="event; public; instance; declared"><td><img src="../icons/pubevent.gif" /></td><td><a href="E_OpenMetaverse_InventoryManager_OnTaskItemReceived.htm">OnTaskItemReceived</a></td><td><div class="summary">
            Fired when a task inventory item is received
            
            This may occur when an object that's rezzed in world is
            taken into inventory, when an item is created using the CreateInventoryItem
            packet, or when an object is purchased
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/pubmethod.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_OpenMetaverse_InventoryManager_ParseTaskInventory.htm">ParseTaskInventory(String)</a></td><td><div class="summary">
            Parse the results of a RequestTaskInventory() response
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_InventoryManager_Remove.htm">Remove(List<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>LLUUID<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>, List<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>LLUUID<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary">
            Remove multiple items or folders from inventory
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_InventoryManager_RemoveDescendants.htm">RemoveDescendants(LLUUID)</a></td><td><div class="summary">
            Remove descendants of a folder
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_InventoryManager_RemoveFolder.htm">RemoveFolder(LLUUID)</a></td><td><div class="summary">
            Remove a folder from inventory
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_InventoryManager_RemoveItem.htm">RemoveItem(LLUUID)</a></td><td><div class="summary">
            Remove a single item from inventory
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_InventoryManager_RemoveTaskInventory.htm">RemoveTaskInventory(UInt32, LLUUID, Simulator)</a></td><td><div class="summary">
            Remove an item from an objects (Prim) Inventory
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_InventoryManager_RequestCopyItem.htm">RequestCopyItem(LLUUID, LLUUID, String, InventoryManager<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>ItemCopiedCallback)</a></td><td><div class="summary">
      </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_InventoryManager_RequestCopyItem_1.htm">RequestCopyItem(LLUUID, LLUUID, String, LLUUID, InventoryManager<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>ItemCopiedCallback)</a></td><td><div class="summary">
      </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_InventoryManager_RequestCopyItemFromNotecard.htm">RequestCopyItemFromNotecard(LLUUID, LLUUID, LLUUID, LLUUID)</a></td><td><div class="summary">
      </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_InventoryManager_RequestCopyItems.htm">RequestCopyItems(List<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>LLUUID<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>, List<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>LLUUID<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>, List<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>String<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>, LLUUID, InventoryManager<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>ItemCopiedCallback)</a></td><td><div class="summary">
      </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_InventoryManager_RequestCreateItem.htm">RequestCreateItem(LLUUID, String, String, AssetType, LLUUID, InventoryType, PermissionMask, InventoryManager<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>ItemCreatedCallback)</a></td><td><div class="summary">
      </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_InventoryManager_RequestCreateItem_1.htm">RequestCreateItem(LLUUID, String, String, AssetType, LLUUID, InventoryType, WearableType, PermissionMask, InventoryManager<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>ItemCreatedCallback)</a></td><td><div class="summary">
      </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_InventoryManager_RequestCreateItemFromAsset.htm">RequestCreateItemFromAsset(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Byte<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span></span>, String, String, AssetType, InventoryType, LLUUID, CapsClient<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>ProgressCallback, InventoryManager<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>ItemCreatedFromAssetCallback)</a></td><td><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_InventoryManager_RequestDeRezToInventory.htm">RequestDeRezToInventory(UInt32)</a></td><td><div class="summary">
            DeRez an object from the simulator to the agents Objects folder in the agents Inventory
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_InventoryManager_RequestDeRezToInventory_1.htm">RequestDeRezToInventory(UInt32, DeRezDestination, LLUUID, LLUUID)</a></td><td><div class="summary">
            DeRez an object from the simulator and return to inventory
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_InventoryManager_RequestFetchInventory.htm">RequestFetchInventory(LLUUID, LLUUID)</a></td><td><div class="summary">
            Request A single inventory item
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_InventoryManager_RequestFetchInventory_1.htm">RequestFetchInventory(List<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>LLUUID<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>, List<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>LLUUID<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary">
            Request inventory items
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_InventoryManager_RequestFindObjectByPath.htm">RequestFindObjectByPath(LLUUID, LLUUID, String)</a></td><td><div class="summary">
            Find inventory items by path
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_InventoryManager_RequestFolderContents.htm">RequestFolderContents(LLUUID, LLUUID, Boolean, Boolean, InventorySortOrder)</a></td><td><div class="summary">
            Request the contents of an inventory folder
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_InventoryManager_RequestRezFromInventory.htm">RequestRezFromInventory(Simulator, LLQuaternion, LLVector3, InventoryObject)</a></td><td><div class="summary">
            Rez an object from inventory
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_InventoryManager_RequestRezFromInventory_1.htm">RequestRezFromInventory(Simulator, LLQuaternion, LLVector3, InventoryObject, LLUUID)</a></td><td><div class="summary">
            Rez an object from inventory
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_InventoryManager_RequestRezFromInventory_2.htm">RequestRezFromInventory(Simulator, LLQuaternion, LLVector3, InventoryObject, LLUUID, LLUUID, Boolean)</a></td><td><div class="summary">
            Rez an object from inventory
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_InventoryManager_RequestTaskInventory.htm">RequestTaskInventory(UInt32)</a></td><td><div class="summary">
      </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_InventoryManager_RequestTaskInventory_1.htm">RequestTaskInventory(UInt32, Simulator)</a></td><td><div class="summary">
            Request the contents of a tasks (primitives) inventory
            </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_InventoryManager_RequestUpdateItem.htm">RequestUpdateItem(InventoryItem)</a></td><td><div class="summary">
      </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_InventoryManager_RequestUpdateItems.htm">RequestUpdateItems(List<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>InventoryItem<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>)</a></td><td><div class="summary">
      </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_InventoryManager_RequestUpdateItems_1.htm">RequestUpdateItems(List<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span></span>InventoryItem<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span></span>, LLUUID)</a></td><td><div class="summary">
      </div><br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_InventoryManager_RequestUploadNotecardAsset.htm">RequestUploadNotecardAsset(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Byte<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span></span>, LLUUID, InventoryManager<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>NotecardUploadedAssetCallback)</a></td><td><div class="summary">
      </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/pubmethod.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_OpenMetaverse_InventoryManager_SaleTypeToString.htm">SaleTypeToString(SaleType)</a></td><td><br /></td></tr><tr data="property; public; instance; declared"><td><img src="../icons/pubproperty.gif" /></td><td><a href="P_OpenMetaverse_InventoryManager_Store.htm">Store</a></td><td><div class="summary">
            Get this agents Inventory data
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/pubmethod.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_OpenMetaverse_InventoryManager_StringToAssetType.htm">StringToAssetType(String)</a></td><td><div class="summary">
            Translate a string name of an AssetType into the proper Type
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/pubmethod.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_OpenMetaverse_InventoryManager_StringToInventoryType.htm">StringToInventoryType(String)</a></td><td><div class="summary">
            Convert a string into a valid InventoryType
            </div><br /></td></tr><tr data="method; public; static; declared"><td><img src="../icons/pubmethod.gif" /><img src="../icons/static.gif" title="static member" /></td><td><a href="M_OpenMetaverse_InventoryManager_StringToSaleType.htm">StringToSaleType(String)</a></td><td><br /></td></tr><tr data="method; public; instance; inherited"><td><img src="../icons/pubmethod.gif" /></td><td><a href="http://msdn2.microsoft.com/en-us/7bxwbwt2" target="_blank">ToString<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span></span></a></td><td><div class="summary">Returns a <a href="http://msdn2.microsoft.com/en-us/s1wwdcbf" target="_blank">String</a> that represents the current <a href="http://msdn2.microsoft.com/en-us/e5kfa45b" target="_blank">Object</a>.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/e5kfa45b" target="_blank">Object</a>.)<br /></td></tr><tr data="method; public; instance; declared"><td><img src="../icons/pubmethod.gif" /></td><td><a href="M_OpenMetaverse_InventoryManager_UpdateTaskInventory.htm">UpdateTaskInventory(UInt32, InventoryItem)</a></td><td><div class="summary">
      </div><br /></td></tr></table><script type="text/javascript">
					var mt = new ElementCollection('memberTabs');
					var ms = new ElementCollection('memberList');
					var mf = new MemberFilter();
					mt.toggleClass('value','all','activeTab','tab');
				</script></div></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Inheritance Hierarchy</div><div class="sectionContent"><table cellspacing="0" cellpadding="0"><tr><td colspan="2"><a href="http://msdn2.microsoft.com/en-us/e5kfa45b" target="_blank">Object</a></td></tr><tr><td><img src="../icons/LastChild.gif" /></td><td><span class="selflink">InventoryManager</span></td></tr></table></div></div><p><div id="footer"><p />Send comments on this topic to
        <a id="HT_MailLink" href="mailto:contact%40libsecondlife.org?Subject=OpenMetaverse Library API Documentation">The OpenMetaverse Ninjas</a>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title;
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> <p /><a href="http://www.libsecondlife.org/wiki/libsecondlife:License">License</a></div>Assembly: <span data="assembly">OpenMetaverse</span> (Module: OpenMetaverse) Version: 1.0.0.0</p></div></body></html>